package.DeepMXNet = {
  interfaces = (0.9);

  #build-system = brazilcmake;
  build-system = bmvn;

  build-environment = {
    chroot = basic;
    network-access = blocked;
  };

  build-tools = {
    0.9 = {
      BrazilPath = 1.1;
      Chrpath = 1.0;
      GnuMake = 3.81;
      #GCC = 4.9.x;
      CMake = 3.5.x;
      Cuda = 7.x;
      DeepBrazilCmakeBuildSystem = 2.0;
      DeepMShadow = 2.x;
      BrazilPython = 2.0;
      Python27 = 1.0;
      Python34 = 1.0;
      Python-setuptools = 2.x;
      C-ares = 1.x;
      CFlagsGCC = 4.9.x;

      # Scala build
      #JDK8 = 1.0;
      JDK = 1.7;
      Maven = 3.0;
      #Aether = 1;
      Scala29 = 1.0;
      BrazilMaven = 3.0;
      BrazilAetherSupport = 1.0;
      Maven-maven-site-plugin = 3.x;
      Maven-maven-deploy-plugin = 2.x;
      Maven-maven-install-plugin = 2.x;
      Maven-maven-clean-plugin = 2.x;
      Maven-maven-enforcer-plugin = 1.x;
    };
  };

  dependencies = {
    0.9 = {
     Maven-oss-parent = 6;
     LibStdCppNoCFlags = 4.9;
#      LibStdCpp = gcc;
#      CFlagsGCC = 4.9.x;
      Googletest = 1.x;
      CMake = 3.5.x;
      OpenBLAS = 0.2.x;
      DeepDmlc-core = 0.9;
      DeepMShadow = 2.x;
      DeepJemalloc = 4.x;
#      CRuntime = 1.0;
      Cuda = 7.x;
      C-ares = 1.x;
      DeepCudnn = 5.x;
#      DeepOpenCV = 2.4.x;
      DeepNNVM = 0.9;
      DeepMKL = 1.0;
      CUB = 1.6;
    };
  };

  runtime-dependencies = {
    0.9 = {
        CRuntime = 1.0;
        C-ares = 1.x;
        #LibStdCppNoCFlags = 4.9;
        LibStdCpp = gcc;
        DeepMXNetApolloDeploymentHelper = 1.0;
    };
  };

  python = {
        default-version = "2.7";
        setup-type = setuptools;
        unittesttype = pytest;
        # this test line must be modified by adding --cov
        # YOUR_PYTHON_MODULE and uncommented in order to enable
        # coverage.  You really, really should create tests.
        #
        # You must specify the python module or package root you wish to
        # cover using the --cov command line flag. As an example, "--cov
        # bender.core" would collect coverage for every module and
        # package in the bender.core namespace.

        testargs_release = "--cov-report html --cov-report xml -v";
        testargs = "--cov-report term-missing";
  };

  targets = {
    libmxnet = {
      type = clibrary;
      visibility = external;
      builtLibraries = ("libmxnet");
      libraryLinkageMode = {
        all = preferDynamic;
      };
    };

    # This target is needed for upstream python packages to include mxnet
    # in the PYTHONPATH correctly.
    python = { type = python };
    scala-mxnet = { type = javalibrary; };
  };

};
# vim: set ft=perl ts=2 sw=2 tw=79 :
